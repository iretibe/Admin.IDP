// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Admin.IDP.Entity
{
    public partial class PersoltaxadmindbContext : DbContext
    {
        public virtual DbSet<ApiResourceClaims> ApiResourceClaims { get; set; }
        public virtual DbSet<ApiResourceProperties> ApiResourceProperties { get; set; }
        public virtual DbSet<ApiResourceScopes> ApiResourceScopes { get; set; }
        public virtual DbSet<ApiResourceSecrets> ApiResourceSecrets { get; set; }
        public virtual DbSet<ApiResources> ApiResources { get; set; }
        public virtual DbSet<ApiScopeClaims> ApiScopeClaims { get; set; }
        public virtual DbSet<ApiScopeProperties> ApiScopeProperties { get; set; }
        public virtual DbSet<ApiScopes> ApiScopes { get; set; }
        public virtual DbSet<AspNetRoleClaims> AspNetRoleClaims { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUserTokens> AspNetUserTokens { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<ClientClaims> ClientClaims { get; set; }
        public virtual DbSet<ClientCorsOrigins> ClientCorsOrigins { get; set; }
        public virtual DbSet<ClientGrantTypes> ClientGrantTypes { get; set; }
        public virtual DbSet<ClientIdPRestrictions> ClientIdPRestrictions { get; set; }
        public virtual DbSet<ClientPostLogoutRedirectUris> ClientPostLogoutRedirectUris { get; set; }
        public virtual DbSet<ClientProperties> ClientProperties { get; set; }
        public virtual DbSet<ClientRedirectUris> ClientRedirectUris { get; set; }
        public virtual DbSet<ClientScopes> ClientScopes { get; set; }
        public virtual DbSet<ClientSecrets> ClientSecrets { get; set; }
        public virtual DbSet<Clients> Clients { get; set; }
        public virtual DbSet<DeviceCodes> DeviceCodes { get; set; }
        public virtual DbSet<IdentityResourceClaims> IdentityResourceClaims { get; set; }
        public virtual DbSet<IdentityResourceProperties> IdentityResourceProperties { get; set; }
        public virtual DbSet<IdentityResources> IdentityResources { get; set; }
        public virtual DbSet<PersistedGrants> PersistedGrants { get; set; }
        public virtual DbSet<TempSegment> TempSegment { get; set; }
        public virtual DbSet<psAdAccount> psAdAccount { get; set; }
        public virtual DbSet<psAdAccountApp> psAdAccountApp { get; set; }
        public virtual DbSet<psAdCompany> psAdCompany { get; set; }
        public virtual DbSet<psAdPersonelAppReqRights> psAdPersonelAppReqRights { get; set; }
        public virtual DbSet<psAdPersonelSegmentRequest> psAdPersonelSegmentRequest { get; set; }
        public virtual DbSet<psAdPersonnel> psAdPersonnel { get; set; }
        public virtual DbSet<psAdPersonnelRequest> psAdPersonnelRequest { get; set; }
        public virtual DbSet<psAdRegistry> psAdRegistry { get; set; }
        public virtual DbSet<psAdReportFilter> psAdReportFilter { get; set; }
        public virtual DbSet<psAdReportSort> psAdReportSort { get; set; }
        public virtual DbSet<psAdSegment> psAdSegment { get; set; }
        public virtual DbSet<psAdSegmentTrans> psAdSegmentTrans { get; set; }
        public virtual DbSet<psAdUser> psAdUser { get; set; }
        public virtual DbSet<psAdUserApp> psAdUserApp { get; set; }
        public virtual DbSet<psAdUserApp_Log> psAdUserApp_Log { get; set; }
        public virtual DbSet<psAdUserGroup> psAdUserGroup { get; set; }
        public virtual DbSet<psAdUserGroupApp> psAdUserGroupApp { get; set; }
        public virtual DbSet<psAdUserGroupApp_Log> psAdUserGroupApp_Log { get; set; }
        public virtual DbSet<psAdUserGroupSegment> psAdUserGroupSegment { get; set; }
        public virtual DbSet<psAdUserGroupSegment_Log> psAdUserGroupSegment_Log { get; set; }
        public virtual DbSet<psAdUserGroup_Log> psAdUserGroup_Log { get; set; }
        public virtual DbSet<psAdUserSegment> psAdUserSegment { get; set; }
        public virtual DbSet<psAdUserSegment_Log> psAdUserSegment_Log { get; set; }
        public virtual DbSet<psAssembly> psAssembly { get; set; }
        public virtual DbSet<psAuditTrail> psAuditTrail { get; set; }
        public virtual DbSet<psAuthorisation> psAuthorisation { get; set; }
        public virtual DbSet<psDatabaseInfo> psDatabaseInfo { get; set; }
        public virtual DbSet<psDevice> psDevice { get; set; }
        public virtual DbSet<psExchangeRate_Log> psExchangeRate_Log { get; set; }
        public virtual DbSet<psLogs> psLogs { get; set; }
        public virtual DbSet<psUserAction> psUserAction { get; set; }
        public virtual DbSet<psUserRequest> psUserRequest { get; set; }
        public virtual DbSet<spAdReportGroup> spAdReportGroup { get; set; }
        public virtual DbSet<spApps> spApps { get; set; }
        public virtual DbSet<spAuthLevel> spAuthLevel { get; set; }
        public virtual DbSet<spAuthorization> spAuthorization { get; set; }
        public virtual DbSet<spGroupAuth> spGroupAuth { get; set; }
        public virtual DbSet<spPersonnel> spPersonnel { get; set; }
        public virtual DbSet<spProjects> spProjects { get; set; }
        public virtual DbSet<spReportFilterOptions> spReportFilterOptions { get; set; }
        public virtual DbSet<spReportItems> spReportItems { get; set; }
        public virtual DbSet<spStrings> spStrings { get; set; }

        public PersoltaxadmindbContext(DbContextOptions<PersoltaxadmindbContext> options) : base(options)
        {
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {

            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.ApplyConfiguration(new ApiResourceClaimsConfiguration());
            modelBuilder.ApplyConfiguration(new ApiResourcePropertiesConfiguration());
            modelBuilder.ApplyConfiguration(new ApiResourceScopesConfiguration());
            modelBuilder.ApplyConfiguration(new ApiResourceSecretsConfiguration());
            modelBuilder.ApplyConfiguration(new ApiResourcesConfiguration());
            modelBuilder.ApplyConfiguration(new ApiScopeClaimsConfiguration());
            modelBuilder.ApplyConfiguration(new ApiScopePropertiesConfiguration());
            modelBuilder.ApplyConfiguration(new ApiScopesConfiguration());
            modelBuilder.ApplyConfiguration(new AspNetRoleClaimsConfiguration());
            modelBuilder.ApplyConfiguration(new AspNetRolesConfiguration());
            modelBuilder.ApplyConfiguration(new AspNetUserClaimsConfiguration());
            modelBuilder.ApplyConfiguration(new AspNetUserLoginsConfiguration());
            modelBuilder.ApplyConfiguration(new AspNetUserRolesConfiguration());
            modelBuilder.ApplyConfiguration(new AspNetUserTokensConfiguration());
            modelBuilder.ApplyConfiguration(new AspNetUsersConfiguration());
            modelBuilder.ApplyConfiguration(new ClientClaimsConfiguration());
            modelBuilder.ApplyConfiguration(new ClientCorsOriginsConfiguration());
            modelBuilder.ApplyConfiguration(new ClientGrantTypesConfiguration());
            modelBuilder.ApplyConfiguration(new ClientIdPRestrictionsConfiguration());
            modelBuilder.ApplyConfiguration(new ClientPostLogoutRedirectUrisConfiguration());
            modelBuilder.ApplyConfiguration(new ClientPropertiesConfiguration());
            modelBuilder.ApplyConfiguration(new ClientRedirectUrisConfiguration());
            modelBuilder.ApplyConfiguration(new ClientScopesConfiguration());
            modelBuilder.ApplyConfiguration(new ClientSecretsConfiguration());
            modelBuilder.ApplyConfiguration(new ClientsConfiguration());
            modelBuilder.ApplyConfiguration(new DeviceCodesConfiguration());
            modelBuilder.ApplyConfiguration(new IdentityResourceClaimsConfiguration());
            modelBuilder.ApplyConfiguration(new IdentityResourcePropertiesConfiguration());
            modelBuilder.ApplyConfiguration(new IdentityResourcesConfiguration());
            modelBuilder.ApplyConfiguration(new PersistedGrantsConfiguration());
            modelBuilder.ApplyConfiguration(new TempSegmentConfiguration());
            modelBuilder.ApplyConfiguration(new psAdAccountConfiguration());
            modelBuilder.ApplyConfiguration(new psAdAccountAppConfiguration());
            modelBuilder.ApplyConfiguration(new psAdCompanyConfiguration());
            modelBuilder.ApplyConfiguration(new psAdPersonelAppReqRightsConfiguration());
            modelBuilder.ApplyConfiguration(new psAdPersonelSegmentRequestConfiguration());
            modelBuilder.ApplyConfiguration(new psAdPersonnelConfiguration());
            modelBuilder.ApplyConfiguration(new psAdPersonnelRequestConfiguration());
            modelBuilder.ApplyConfiguration(new psAdRegistryConfiguration());
            modelBuilder.ApplyConfiguration(new psAdReportFilterConfiguration());
            modelBuilder.ApplyConfiguration(new psAdReportSortConfiguration());
            modelBuilder.ApplyConfiguration(new psAdSegmentConfiguration());
            modelBuilder.ApplyConfiguration(new psAdSegmentTransConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserAppConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserApp_LogConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserGroupConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserGroupAppConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserGroupApp_LogConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserGroupSegmentConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserGroupSegment_LogConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserGroup_LogConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserSegmentConfiguration());
            modelBuilder.ApplyConfiguration(new psAdUserSegment_LogConfiguration());
            modelBuilder.ApplyConfiguration(new psAssemblyConfiguration());
            modelBuilder.ApplyConfiguration(new psAuditTrailConfiguration());
            modelBuilder.ApplyConfiguration(new psAuthorisationConfiguration());
            modelBuilder.ApplyConfiguration(new psDatabaseInfoConfiguration());
            modelBuilder.ApplyConfiguration(new psDeviceConfiguration());
            modelBuilder.ApplyConfiguration(new psExchangeRate_LogConfiguration());
            modelBuilder.ApplyConfiguration(new psLogsConfiguration());
            modelBuilder.ApplyConfiguration(new psUserActionConfiguration());
            modelBuilder.ApplyConfiguration(new psUserRequestConfiguration());
            modelBuilder.ApplyConfiguration(new spAdReportGroupConfiguration());
            modelBuilder.ApplyConfiguration(new spAppsConfiguration());
            modelBuilder.ApplyConfiguration(new spAuthLevelConfiguration());
            modelBuilder.ApplyConfiguration(new spAuthorizationConfiguration());
            modelBuilder.ApplyConfiguration(new spGroupAuthConfiguration());
            modelBuilder.ApplyConfiguration(new spPersonnelConfiguration());
            modelBuilder.ApplyConfiguration(new spProjectsConfiguration());
            modelBuilder.ApplyConfiguration(new spReportFilterOptionsConfiguration());
            modelBuilder.ApplyConfiguration(new spReportItemsConfiguration());
            modelBuilder.ApplyConfiguration(new spStringsConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
